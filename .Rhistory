library ("plyr")
library ("dplyr")
library ("rvest")
library ("readr")
library ("knitr")
library ("stringr")
library ("xml2")
library ("ggplot2")
install.packages("ggplot2")
library ("ggplot2")
link_ipaidabribe = paste("http://www.ipaidabribe.com/reports/paid?page=", 0:99, 0, sep = "")
scrape_ipaidabribe = function (link_ipaidabribe) {
my.link = read_html(link_ipaidabribe, encoding= "UTF-8")
location = my.link %>%
html_nodes(".location " ) %>%
html_text()
date = my.link %>%
html_nodes(".date " ) %>%
html_text()
transactiondetail = my.link %>%
html_nodes(".transaction a" ) %>%
html_text()
depname = my.link %>%
html_nodes(".name a" ) %>%
html_text()
title = my.link %>%
html_nodes(".heading-3 a" ) %>%
html_text()
views = my.link %>%
html_nodes(".overview .views" ) %>%
html_text()
payment = my.link %>%
html_nodes(".paid-amount span" ) %>%
html_text()
refnumber = my.link %>%
html_nodes(".unique-reference" ) %>%
html_text()
return (cbind(title, payment, depname, transactiondetail, views, location, date, refnumber))
}
my.ipaidabribe.data = list()
for (i in link_ipaidabribe){
print(paste("processing", i, sep = " "))
my.ipaidabribe.data[[i]] = scrape_ipaidabribe(i)
Sys.sleep(0.25)
cat(" done!\n")
}
df=ldply(my.ipaidabribe.data, data.frame)
View(df)
df.backup = df
df$payment = gsub(",","",df$payment)
df$payment = as.numeric(word(df$payment, +3)) # generating variable with only the price
View(df)
summary(df$payment)
p = ggplot(data = df, aes(x = payment))
p = p + geom_density() + labs(title = "Figure 1: Distribution of bribe payments", x = "Log(Payment)", y = "Density")
p = p + scale_x_log10()
p = p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
plot(p)
df.dep = df %>%
filter(!is.na(depname)) %>% #Removing payments with missing department
group_by(depname)
p = ggplot(data = df.dep, aes(x = depname))
p = p + geom_histogram() + coord_flip() + labs(title = "Figure 2: How many bribes do the departments get",
x = "Department",
y = "Number of bribes")
p = p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
plot(p)
df.transaction = subset(df, depname=="Municipal Services") %>%
filter(!is.na(transactiondetail)) %>% #Removing payments with missing transaction detail
group_by(transactiondetail)
p = ggplot(data = df.transaction, aes(x = transactiondetail))
p = p + geom_histogram() + coord_flip() + labs(title = "Figure 3: What do the municipalities get bribed for",
x = "Action",
y = "Number of bribes")
p = p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
plot(p)
install.packages("maptools")
library("maptools")
library("maptools")
View(df)
View(df)
India_pop = read_html(https://en.wikipedia.org/wiki/Demographics_of_India) %>%
htlm_node(".jquery-tablesorter+ .jquery-tablesorter td") %>%
htlm_table()
India_pop = read_html(https://www.en.wikipedia.org/wiki/Demographics_of_India) %>%
htlm_node(".jquery-tablesorter+ .jquery-tablesorter td") %>%
htlm_table()
India_pop = read_html("https://www.en.wikipedia.org/wiki/Demographics_of_India"") %>%
htlm_node(".jquery-tablesorter+ .jquery-tablesorter td") %>%
htlm_table()
India_pop = read_html("https://www.en.wikipedia.org/wiki/Demographics_of_India") %>%
htlm_node(".jquery-tablesorter+ .jquery-tablesorter td") %>%
htlm_table()
?html_nodes
India_pop = read_html("https://www.en.wikipedia.org/wiki/Demographics_of_India") %>%
htlm_nodes(".jquery-tablesorter+ .jquery-tablesorter td") %>%
htlm_table()
India_pop = read_html("https://www.en.wikipedia.org/wiki/Demographics_of_India") %>%
htlm_nodes(".wikitable") %>%
htlm_table()
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
htlm_nodes(".wikitable") %>%
htlm_table()
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td") %>%
html_table()
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_nodes(".wikitable") %>%
html_table()
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_node(".wikitable") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td")
html_table( fill=T)
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_node(".wikitable") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td")
html_table( )
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_node(".wikitable") %>%
html_attr(title="States and territories of India") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td") %>%
html_table( )
?html_attr
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_node(".wikitable") %>%
html_attr("States and territories of India") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td") %>%
html_table( )
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_node(".wikitable") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td") %>%
html_table( )
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td") %>%
html_node(".wikitable") %>%
html_table( )
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td") %>%
html_node(".wikitable") %>%
html_table( )
India_pop = read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_node(".wikitable") %>%
html_nodes(".jquery-tablesorter+ .jquery-tablesorter td") %>%
html_table( )
India_pop = ("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_node(".wikitable") %>%
html_table( )
col_deps = html("https://en.wikipedia.org/wiki/Departments_of_Colombia")
#get names of deps and their capitals
dep_table = col_deps %>%
html_node(".wikitable") %>%
html_table(., fill = T)
link_caps = col_deps %>%
html_node(".wikitable") %>%
html_nodes("td:nth-child(3) a") %>%
html_attr(., "href")
India_pop = ("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html() %>%
html_nodes(xpath= "//*[@id="mw-content-text"]/table[4]") %>%
html_table( )
India_pop = "https://en.wikipedia.org/wiki/Demographics_of_India" %>%
html() %>%
html_nodes(xpath= "//*[@id="mw-content-text"]/table[4]") %>%
html_table( )
India_pop =  html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_nodes(xpath= "//*[@id="mw-content-text"]/table[4]") %>%
html_table( )
India_pop =  html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_nodes(xpath= '//*[@id="mw-content-text"]/table[4]') %>%
html_table( )
India_pop =  read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_nodes(xpath= '//*[@id="mw-content-text"]/table[4]') %>%
html_table( )
India_pop =  read_html("https://en.wikipedia.org/wiki/Demographics_of_India") %>%
html_nodes(xpath= '//*[@id="mw-content-text"]/table[4]') %>%
html_table( )
df_India_pop=ldply(India_pop, data.frame)
View(df_India_pop)
df$state = strsplit(df$location, split="//,//"")
View(df)
View(df)
View(df)
?gsub
?gsub
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
df$state = strsplit(df$location, split="//,//")
View(df)
df$state = strsplit(df$location, split="//,//")
df$state = strsplit(df$location, split=",")
class(df$location)
as.character(df$location)
df$state = strsplit(df$location, split=",")
df$state = strsplit(df$location, split="\\,\\")
df$state = strsplit(df$location, split="//,//")
location = as.character(df$location)
df$state = strsplit(df$location, split="//,//")
Head(location,5)
head(location,5)
df$state = strsplit(df$location, split="//, //")
df$State = df$location %>%
str_replace_all(pattern = "[a-z]*\r\n") %>%
str_trim()
df$State = df$location %>%
str_replace_all(pattern = "[a-z]*\r\n" , replacement= " ") %>%
str_trim()
df$State = df$location %>%
str_replace_all(pattern = "[A-Z][a-z]*\r\n" , replacement= " ") %>%
str_trim()
df$State = df$location %>%
str_replace_all(pattern = "[A-Z][a-z]*\r\n ," , replacement= " ") %>%
str_trim()
df$State = df$location %>%
str_replace_all(pattern = "[A-Z][a-z]*\r\n" , replacement= " ") %>%
str_trim()
df$State = df$location %>%
str_replace_all(pattern = "[A-Z][a-z]*\r\n" , replacement= " ") %>%
str_trim() %>%
str_replace_all(pattern= "," replacement ="")
df$State = df$location %>%
str_replace_all(pattern = "[A-Z][a-z]*\r\n" , replacement= " ") %>%
str_trim() %>%
str_replace_all(pattern= "\\,\\" replacement ="")
df$State = df$location %>%
str_replace_all(pattern = "[A-Z][a-z]*\r\n" , replacement= " ") %>%
str_trim() %>%
gsub(pattern= "\\,\\" replacement ="")
?gsub
df$State = df$location %>%
str_replace_all(pattern = "[A-Z][a-z]*\r\n" , replacement= " ") %>%
str_trim() %>%
gsub(pattern= "\\," replacement ="")
gsub("\\,", "")
df$state_1 = gsub(",", "", df$State)
df$State = df$location %>%
str_replace_all(pattern = "[A-Z][a-z]*\r\n" , replacement= " ") %>%
str_trim() %>%
gsub(",", "", df$State)
